# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"


stages:
- build
- test
- deploy

before_script:
- export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
  - .gradle/wrapper
  - .gradle/caches

build:
  stage: build
  script:
  - gradle assemble

test:
  stage: test
  script:
  - gradle check

k8s-deploy:
  image: google/cloud-sdk
  stage: deploy
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set compute/zone europe-west1-c
  - gcloud config set project actuator-sample
  - gcloud config set container/use_client_certificate True
  - gcloud container clusters get-credentials actuator-sample
  - kubectl delete secret registry.gitlab.com
  - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=irvingfish --docker-password=$REGISTRY_PASSWD --docker-email=irvingfish@gmail.com
  - kubectl apply -f deployment.yml

after_script:
- echo "End CI"
